@page
@model HomeTask8.Pages.GetModel
@{
    ViewData["Title"] = "Getting information";
}

<h2>Getting information</h2>

<form method="get">
    <div class="margining select-section-inline">
        <label asp-for="SelectedInfoType"></label><br />
        <select onChange="filterFieldTogglingInGet()" asp-for="SelectedInfoType" asp-items="Model.InfoTypes">
            <option value="" selected disabled hidden>Choose type</option>
        </select>
    </div>

    <div class="margining filter-section-in-get">
        <label for="FilterField"></label><br />
        <input asp-for="FilterField" />
    </div>
    <br />

    <button class="margining" type="submit">Get Information</button> <br />

    <script>
        filterFieldTogglingInGet();
    </script>
</form>

@if (Model.ExceptionMessage == null)
{
    <table class="table">
        @switch (Model.SelectedInfoType)
        {
            case "allStudents":
            case "allStudentsInCourse":
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Phone number</th>
                        <th>Email</th>
                        <th>Github</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (StudyManager.Models.Student student in Model.Objects)
                    {
                        <tr>
                            <td>@student.StudentID</td>
                            <td>@student.FirstName</td>
                            <td>@student.LastName</td>
                            <td>@student.PhoneNumber</td>
                            <td>@student.Email</td>
                            <td>@student.Github</td>
                        </tr>
                    }
                </tbody>
                break;
            case "allCourses":
            case "allCoursesForStudent":
            case "allCoursesWithDefiniteLecturer":
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Passing Score</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (StudyManager.Models.Course course in Model.Objects)
                    {
                        <tr>
                            <td>@course.CourseID</td>
                            <td>@course.Name</td>
                            <td>@course.StartDate.Date.ToString("d", new CultureInfo("fr-FR"))</td>
                            <td>@course.EndDate.Date.ToString("d", new CultureInfo("fr-FR"))</td>
                            <td>@course.PassingScore</td>
                        </tr>
                    }
                </tbody>
                break;
            case "allLecturers":
            case "allLecturersForCourse":
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Birth Date</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (StudyManager.Models.Lecturer lecturer in Model.Objects)
                    {
                        <tr>
                            <td>@lecturer.LecturerID</td>
                            <td>@lecturer.Name</td>
                            <td>@lecturer.BirthDate.Date.ToString("d", new CultureInfo("fr-FR"))</td>
                        </tr>
                    }
                </tbody>
                break;
            case "allHomeTasks":
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Task Date</th>
                        <th>Serial Number</th>
                        <th>Course ID</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (StudyManager.Models.HomeTask hometask in Model.Objects)
                    {
                        <tr>
                            <td>@hometask.HomeTaskID</td>
                            <td>@hometask.Name</td>
                            <td>@hometask.Description</td>
                            <td>@hometask.TaskDate.Date.ToString("d", new CultureInfo("fr-FR"))</td>
                            <td>@hometask.SerialNumber</td>
                            <td>@hometask.CourseID</td>
                        </tr>
                    }
                </tbody>
                break;
            case "allGrades":
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Grade Date</th>
                        <th>Is Complete</th>
                        <th>HomeTask ID</th>
                        <th>Student ID</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (StudyManager.Models.Grade grade in Model.Objects)
                    {
                        <tr>
                            <td>@grade.GradeID</td>
                            <td>@grade.GradeDate.Date.ToString("d", new CultureInfo("fr-FR"))</td>
                            <td>@grade.IsComplete</td>
                            <td>@grade.HomeTaskID</td>
                            <td>@grade.StudentID</td>
                        </tr>
                    }
                </tbody>
                break;
        }
    </table>
}
else
{
    <h3 class="text-danger">@Model.ExceptionMessage</h3>
}
