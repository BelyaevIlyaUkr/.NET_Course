@page
@model HomeTask8.Pages.ConnectModel
@{ 
    ViewData["Title"] = "Connecting objects"; 
}

<h2>Connecting information</h2>

<form method="post">
    <div class="margining select-section-inline">
        <label asp-for="SelectedInfoType"></label>
        <br />
        <select onchange="inputFieldsTogglingOnConnectOrDisconnectPage(true); clearResultPlaceOnPage();" asp-for="SelectedInfoType" asp-items="Model.InfoTypes">
            <option value="" selected disabled hidden>Choose type</option>
        </select>
    </div>

    <div class="ConnectOrDisconnectPageInputFields margining">
        <label for="FirstInputField"></label><br />
        <input asp-for="FirstInputField" />
    </div>
    <div class="ConnectOrDisconnectPageInputFields margining">
        <label asp-for="SecondInputField"></label><br />
        <input asp-for="SecondInputField" />
    </div>
    <br />

    <button class="margining" type="submit">Connect objects</button>

    <script>inputFieldsTogglingOnConnectOrDisconnectPage(false);</script>
</form>

@if (Model.ExceptionMessage == null)
{

    if (Model.SelectedInfoType == "studentToCourse")
    {
        <h3 id="result-label" class="text-black-50">Student was connected to course successfully. List of students on this course:</h3>
    }
    else if (Model.SelectedInfoType == "lecturerToCourse")
    {
        <h3 id="result-label" class="text-black-50">Lecturer was connected to course successfully. List of lecturers on this course:</h3>
    }
    <table class="table">
        @switch (Model.SelectedInfoType)
        {
            case "studentToCourse":
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Phone number</th>
                        <th>Email</th>
                        <th>Github</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (StudyManager.Models.Student student in Model.Objects)
                    {
                        <tr>
                            <td>@student.StudentID</td>
                            <td>@student.FirstName</td>
                            <td>@student.LastName</td>
                            <td>@student.PhoneNumber</td>
                            <td>@student.Email</td>
                            <td>@student.Github</td>
                        </tr>
                    }
                </tbody>
                break;
            case "lecturerToCourse":
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Birth Date</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (StudyManager.Models.Lecturer lecturer in Model.Objects)
                    {
                        <tr>
                            <td>@lecturer.LecturerID</td>
                            <td>@lecturer.Name</td>
                            <td>@lecturer.BirthDate.Date.ToString("d", new CultureInfo("fr-FR"))</td>
                        </tr>
                    }
                </tbody>
                break;
        }
    </table>
}
else
{
    <h3 id="error-label" class="text-danger">@Model.ExceptionMessage</h3>
}
